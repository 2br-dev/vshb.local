"use strict";
(self["webpackChunkvshb_local"] = self["webpackChunkvshb_local"] || []).push([["node_modules_tsparticles_shape-polygon_browser_index_js"],{

/***/ "./node_modules/@tsparticles/shape-polygon/browser/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tsparticles/shape-polygon/browser/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   loadGenericPolygonShape: () => (/* binding */ loadGenericPolygonShape),
/* harmony export */   loadPolygonShape: () => (/* binding */ loadPolygonShape),
/* harmony export */   loadTriangleShape: () => (/* binding */ loadTriangleShape)
/* harmony export */ });
async function loadGenericPolygonShape(engine, refresh = true) {
    const { PolygonDrawer } = await __webpack_require__.e(/*! import() */ "node_modules_tsparticles_shape-polygon_browser_PolygonDrawer_js").then(__webpack_require__.bind(__webpack_require__, /*! ./PolygonDrawer.js */ "./node_modules/@tsparticles/shape-polygon/browser/PolygonDrawer.js"));
    await engine.addShape("polygon", new PolygonDrawer(), refresh);
}
async function loadTriangleShape(engine, refresh = true) {
    const { TriangleDrawer } = await __webpack_require__.e(/*! import() */ "node_modules_tsparticles_shape-polygon_browser_TriangleDrawer_js").then(__webpack_require__.bind(__webpack_require__, /*! ./TriangleDrawer.js */ "./node_modules/@tsparticles/shape-polygon/browser/TriangleDrawer.js"));
    await engine.addShape("triangle", new TriangleDrawer(), refresh);
}
async function loadPolygonShape(engine, refresh = true) {
    await loadGenericPolygonShape(engine, refresh);
    await loadTriangleShape(engine, refresh);
}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX3RzcGFydGljbGVzX3NoYXBlLXBvbHlnb25fYnJvd3Nlcl9pbmRleF9qcy5tYXN0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQU87QUFDUCxZQUFZLGdCQUFnQixRQUFRLDRQQUE0QjtBQUNoRTtBQUNBO0FBQ087QUFDUCxZQUFZLGlCQUFpQixRQUFRLCtQQUE2QjtBQUNsRTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92c2hiLmxvY2FsLy4vbm9kZV9tb2R1bGVzL0B0c3BhcnRpY2xlcy9zaGFwZS1wb2x5Z29uL2Jyb3dzZXIvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxvYWRHZW5lcmljUG9seWdvblNoYXBlKGVuZ2luZSwgcmVmcmVzaCA9IHRydWUpIHtcbiAgICBjb25zdCB7IFBvbHlnb25EcmF3ZXIgfSA9IGF3YWl0IGltcG9ydChcIi4vUG9seWdvbkRyYXdlci5qc1wiKTtcbiAgICBhd2FpdCBlbmdpbmUuYWRkU2hhcGUoXCJwb2x5Z29uXCIsIG5ldyBQb2x5Z29uRHJhd2VyKCksIHJlZnJlc2gpO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxvYWRUcmlhbmdsZVNoYXBlKGVuZ2luZSwgcmVmcmVzaCA9IHRydWUpIHtcbiAgICBjb25zdCB7IFRyaWFuZ2xlRHJhd2VyIH0gPSBhd2FpdCBpbXBvcnQoXCIuL1RyaWFuZ2xlRHJhd2VyLmpzXCIpO1xuICAgIGF3YWl0IGVuZ2luZS5hZGRTaGFwZShcInRyaWFuZ2xlXCIsIG5ldyBUcmlhbmdsZURyYXdlcigpLCByZWZyZXNoKTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBsb2FkUG9seWdvblNoYXBlKGVuZ2luZSwgcmVmcmVzaCA9IHRydWUpIHtcbiAgICBhd2FpdCBsb2FkR2VuZXJpY1BvbHlnb25TaGFwZShlbmdpbmUsIHJlZnJlc2gpO1xuICAgIGF3YWl0IGxvYWRUcmlhbmdsZVNoYXBlKGVuZ2luZSwgcmVmcmVzaCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=