"use strict";
(self["webpackChunkvshb_local"] = self["webpackChunkvshb_local"] || []).push([["node_modules_tsparticles_shape-cards_browser_DiamondDrawer_js"],{

/***/ "./node_modules/@tsparticles/shape-cards/browser/DiamondDrawer.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tsparticles/shape-cards/browser/DiamondDrawer.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DiamondDrawer: () => (/* binding */ DiamondDrawer)
/* harmony export */ });
/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Utils.js */ "./node_modules/@tsparticles/shape-cards/browser/Utils.js");

class DiamondDrawer {
    draw(data) {
        (0,_Utils_js__WEBPACK_IMPORTED_MODULE_0__.drawPath)(data, _Utils_js__WEBPACK_IMPORTED_MODULE_0__.paths.diamond);
    }
}


/***/ }),

/***/ "./node_modules/@tsparticles/shape-cards/browser/Utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tsparticles/shape-cards/browser/Utils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   drawPath: () => (/* binding */ drawPath),
/* harmony export */   paths: () => (/* binding */ paths)
/* harmony export */ });
function drawPath(data, path) {
    if (!path.segments.length || !path.segments[0].values.length) {
        return;
    }
    const { context, radius } = data;
    context.moveTo(path.segments[0].values[0].x * radius, path.segments[0].values[0].y * radius);
    for (const segment of path.segments) {
        context.bezierCurveTo(segment.values[1].x * radius, segment.values[1].y * radius, segment.values[2].x * radius, segment.values[2].y * radius, segment.values[3].x * radius, segment.values[3].y * radius);
    }
    for (let i = path.segments.length - 1; i >= 0; i--) {
        const segment = path.segments[i];
        context.bezierCurveTo(-segment.values[2].x * radius, segment.values[2].y * radius, -segment.values[1].x * radius, segment.values[1].y * radius, -segment.values[0].x * radius, segment.values[0].y * radius);
    }
}
const n = 1.0 / 2;
const paths = {
    heart: {
        segments: [
            {
                values: [
                    { x: 0, y: n },
                    { x: 0, y: n },
                    { x: n, y: 0 },
                    { x: n, y: -n / 2 },
                ],
            },
            {
                values: [
                    { x: n, y: -n / 2 },
                    { x: n, y: -n / 2 },
                    { x: n, y: -n },
                    { x: n / 2, y: -n },
                ],
            },
            {
                values: [
                    { x: n / 2, y: -n },
                    { x: n / 2, y: -n },
                    { x: 0, y: -n },
                    { x: 0, y: -n / 2 },
                ],
            },
        ],
    },
    diamond: {
        segments: [
            {
                values: [
                    { x: 0, y: n },
                    { x: 0, y: n },
                    { x: (3 * n) / 4, y: 0 },
                    { x: (3 * n) / 4, y: 0 },
                ],
            },
            {
                values: [
                    { x: (3 * n) / 4, y: 0 },
                    { x: (3 * n) / 4, y: 0 },
                    { x: 0, y: -n },
                    { x: 0, y: -n },
                ],
            },
        ],
    },
    club: {
        segments: [
            {
                values: [
                    { x: 0, y: -n },
                    { x: 0, y: -n },
                    { x: n / 2, y: -n },
                    { x: n / 2, y: -n / 2 },
                ],
            },
            {
                values: [
                    { x: n / 2, y: -n / 2 },
                    { x: n / 2, y: -n / 2 },
                    { x: n, y: -n / 2 },
                    { x: n, y: 0 },
                ],
            },
            {
                values: [
                    { x: n, y: 0 },
                    { x: n, y: 0 },
                    { x: n, y: n / 2 },
                    { x: n / 2, y: n / 2 },
                ],
            },
            {
                values: [
                    { x: n / 2, y: n / 2 },
                    { x: n / 2, y: n / 2 },
                    { x: n / 8, y: n / 2 },
                    { x: n / 8, y: n / 8 },
                ],
            },
            {
                values: [
                    { x: n / 8, y: n / 8 },
                    { x: n / 8, y: n / 2 },
                    { x: n / 2, y: n },
                    { x: n / 2, y: n },
                ],
            },
            {
                values: [
                    { x: n / 2, y: n },
                    { x: n / 2, y: n },
                    { x: 0, y: n },
                    { x: 0, y: n },
                ],
            },
        ],
    },
    spade: {
        segments: [
            {
                values: [
                    { x: 0, y: -n },
                    { x: 0, y: -n },
                    { x: n, y: -n / 2 },
                    { x: n, y: 0 },
                ],
            },
            {
                values: [
                    { x: n, y: 0 },
                    { x: n, y: 0 },
                    { x: n, y: n / 2 },
                    { x: n / 2, y: n / 2 },
                ],
            },
            {
                values: [
                    { x: n / 2, y: n / 2 },
                    { x: n / 2, y: n / 2 },
                    { x: n / 8, y: n / 2 },
                    { x: n / 8, y: n / 8 },
                ],
            },
            {
                values: [
                    { x: n / 8, y: n / 8 },
                    { x: n / 8, y: n / 2 },
                    { x: n / 2, y: n },
                    { x: n / 2, y: n },
                ],
            },
            {
                values: [
                    { x: n / 2, y: n },
                    { x: n / 2, y: n },
                    { x: 0, y: n },
                    { x: 0, y: n },
                ],
            },
        ],
    },
};


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,