"use strict";
(self["webpackChunkvshb_local"] = self["webpackChunkvshb_local"] || []).push([["node_modules_tsparticles_updater-wobble_browser_WobbleUpdater_js"],{

/***/ "./node_modules/@tsparticles/updater-wobble/browser/Options/Classes/Wobble.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@tsparticles/updater-wobble/browser/Options/Classes/Wobble.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Wobble: () => (/* binding */ Wobble)
/* harmony export */ });
/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ "./node_modules/@tsparticles/engine/browser/index.js");
/* harmony import */ var _WobbleSpeed_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WobbleSpeed.js */ "./node_modules/@tsparticles/updater-wobble/browser/Options/Classes/WobbleSpeed.js");


class Wobble {
    constructor() {
        this.distance = 5;
        this.enable = false;
        this.speed = new _WobbleSpeed_js__WEBPACK_IMPORTED_MODULE_1__.WobbleSpeed();
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.distance !== undefined) {
            this.distance = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.setRangeValue)(data.distance);
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.speed !== undefined) {
            if ((0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.isNumber)(data.speed)) {
                this.speed.load({ angle: data.speed });
            }
            else {
                const rangeSpeed = data.speed;
                if (rangeSpeed.min !== undefined) {
                    this.speed.load({ angle: rangeSpeed });
                }
                else {
                    this.speed.load(data.speed);
                }
            }
        }
    }
}


/***/ }),

/***/ "./node_modules/@tsparticles/updater-wobble/browser/Options/Classes/WobbleSpeed.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@tsparticles/updater-wobble/browser/Options/Classes/WobbleSpeed.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WobbleSpeed: () => (/* binding */ WobbleSpeed)
/* harmony export */ });
/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ "./node_modules/@tsparticles/engine/browser/index.js");

class WobbleSpeed {
    constructor() {
        this.angle = 50;
        this.move = 10;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.angle !== undefined) {
            this.angle = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.setRangeValue)(data.angle);
        }
        if (data.move !== undefined) {
            this.move = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.setRangeValue)(data.move);
        }
    }
}


/***/ }),

/***/ "./node_modules/@tsparticles/updater-wobble/browser/Utils.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tsparticles/updater-wobble/browser/Utils.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   updateWobble: () => (/* binding */ updateWobble)
/* harmony export */ });
/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ "./node_modules/@tsparticles/engine/browser/index.js");

const defaultDistance = 0, double = 2, doublePI = Math.PI * double, distanceFactor = 60;
function updateWobble(particle, delta) {
    const { wobble: wobbleOptions } = particle.options, { wobble } = particle;
    if (!wobbleOptions?.enable || !wobble) {
        return;
    }
    const angleSpeed = wobble.angleSpeed * delta.factor, moveSpeed = wobble.moveSpeed * delta.factor, distance = (moveSpeed * ((particle.retina.wobbleDistance ?? defaultDistance) * delta.factor)) /
        (_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.millisecondsToSeconds / distanceFactor), max = doublePI, { position } = particle;
    wobble.angle += angleSpeed;
    if (wobble.angle > max) {
        wobble.angle -= max;
    }
    position.x += distance * Math.cos(wobble.angle);
    position.y += distance * Math.abs(Math.sin(wobble.angle));
}


/***/ }),

/***/ "./node_modules/@tsparticles/updater-wobble/browser/WobbleUpdater.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tsparticles/updater-wobble/browser/WobbleUpdater.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WobbleUpdater: () => (/* binding */ WobbleUpdater)
/* harmony export */ });
/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ "./node_modules/@tsparticles/engine/browser/index.js");
/* harmony import */ var _Options_Classes_Wobble_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Options/Classes/Wobble.js */ "./node_modules/@tsparticles/updater-wobble/browser/Options/Classes/Wobble.js");
/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Utils.js */ "./node_modules/@tsparticles/updater-wobble/browser/Utils.js");



const double = 2, doublePI = Math.PI * double, maxAngle = 360, moveSpeedFactor = 10, defaultDistance = 0;
class WobbleUpdater {
    constructor(container) {
        this.container = container;
    }
    init(particle) {
        const wobbleOpt = particle.options.wobble;
        if (wobbleOpt?.enable) {
            particle.wobble = {
                angle: (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRandom)() * doublePI,
                angleSpeed: (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(wobbleOpt.speed.angle) / maxAngle,
                moveSpeed: (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(wobbleOpt.speed.move) / moveSpeedFactor,
            };
        }
        else {
            particle.wobble = {
                angle: 0,
                angleSpeed: 0,
                moveSpeed: 0,
            };
        }
        particle.retina.wobbleDistance =
            (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(wobbleOpt?.distance ?? defaultDistance) * this.container.retina.pixelRatio;
    }
    isEnabled(particle) {
        return !particle.destroyed && !particle.spawning && !!particle.options.wobble?.enable;
    }
    loadOptions(options, ...sources) {
        if (!options.wobble) {
            options.wobble = new _Options_Classes_Wobble_js__WEBPACK_IMPORTED_MODULE_1__.Wobble();
        }
        for (const source of sources) {
            options.wobble.load(source?.wobble);
        }
    }
    update(particle, delta) {
        if (!this.isEnabled(particle)) {
            return;
        }
        (0,_Utils_js__WEBPACK_IMPORTED_MODULE_2__.updateWobble)(particle, delta);
    }
}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX3RzcGFydGljbGVzX3VwZGF0ZXItd29iYmxlX2Jyb3dzZXJfV29iYmxlVXBkYXRlcl9qcy5tYXN0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQStEO0FBQ2hCO0FBQ3hDO0FBQ1A7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHdEQUFXO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixrRUFBYTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDZEQUFRO0FBQ3hCLGtDQUFrQyxtQkFBbUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsbUJBQW1CO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7QUNqQ29EO0FBQzdDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGtFQUFhO0FBQ3RDO0FBQ0E7QUFDQSx3QkFBd0Isa0VBQWE7QUFDckM7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0FDakI0RDtBQUM1RDtBQUNPO0FBQ1AsWUFBWSx3QkFBd0Isc0JBQXNCLFNBQVM7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLHNFQUFxQixzQ0FBc0MsV0FBVztBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDZmdFO0FBQ1g7QUFDWDtBQUMxQztBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsOERBQVM7QUFDaEMsNEJBQTRCLGtFQUFhO0FBQ3pDLDJCQUEyQixrRUFBYTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0VBQWE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLDhEQUFNO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsdURBQVk7QUFDcEI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3ZzaGIubG9jYWwvLi9ub2RlX21vZHVsZXMvQHRzcGFydGljbGVzL3VwZGF0ZXItd29iYmxlL2Jyb3dzZXIvT3B0aW9ucy9DbGFzc2VzL1dvYmJsZS5qcyIsIndlYnBhY2s6Ly92c2hiLmxvY2FsLy4vbm9kZV9tb2R1bGVzL0B0c3BhcnRpY2xlcy91cGRhdGVyLXdvYmJsZS9icm93c2VyL09wdGlvbnMvQ2xhc3Nlcy9Xb2JibGVTcGVlZC5qcyIsIndlYnBhY2s6Ly92c2hiLmxvY2FsLy4vbm9kZV9tb2R1bGVzL0B0c3BhcnRpY2xlcy91cGRhdGVyLXdvYmJsZS9icm93c2VyL1V0aWxzLmpzIiwid2VicGFjazovL3ZzaGIubG9jYWwvLi9ub2RlX21vZHVsZXMvQHRzcGFydGljbGVzL3VwZGF0ZXItd29iYmxlL2Jyb3dzZXIvV29iYmxlVXBkYXRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc051bWJlciwgc2V0UmFuZ2VWYWx1ZSwgfSBmcm9tIFwiQHRzcGFydGljbGVzL2VuZ2luZVwiO1xuaW1wb3J0IHsgV29iYmxlU3BlZWQgfSBmcm9tIFwiLi9Xb2JibGVTcGVlZC5qc1wiO1xuZXhwb3J0IGNsYXNzIFdvYmJsZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZGlzdGFuY2UgPSA1O1xuICAgICAgICB0aGlzLmVuYWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLnNwZWVkID0gbmV3IFdvYmJsZVNwZWVkKCk7XG4gICAgfVxuICAgIGxvYWQoZGF0YSkge1xuICAgICAgICBpZiAoIWRhdGEpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGF0YS5kaXN0YW5jZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLmRpc3RhbmNlID0gc2V0UmFuZ2VWYWx1ZShkYXRhLmRpc3RhbmNlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGF0YS5lbmFibGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5lbmFibGUgPSBkYXRhLmVuYWJsZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGF0YS5zcGVlZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBpZiAoaXNOdW1iZXIoZGF0YS5zcGVlZCkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNwZWVkLmxvYWQoeyBhbmdsZTogZGF0YS5zcGVlZCB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJhbmdlU3BlZWQgPSBkYXRhLnNwZWVkO1xuICAgICAgICAgICAgICAgIGlmIChyYW5nZVNwZWVkLm1pbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3BlZWQubG9hZCh7IGFuZ2xlOiByYW5nZVNwZWVkIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zcGVlZC5sb2FkKGRhdGEuc3BlZWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbiIsImltcG9ydCB7IHNldFJhbmdlVmFsdWUgfSBmcm9tIFwiQHRzcGFydGljbGVzL2VuZ2luZVwiO1xuZXhwb3J0IGNsYXNzIFdvYmJsZVNwZWVkIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5hbmdsZSA9IDUwO1xuICAgICAgICB0aGlzLm1vdmUgPSAxMDtcbiAgICB9XG4gICAgbG9hZChkYXRhKSB7XG4gICAgICAgIGlmICghZGF0YSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkYXRhLmFuZ2xlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMuYW5nbGUgPSBzZXRSYW5nZVZhbHVlKGRhdGEuYW5nbGUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkYXRhLm1vdmUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5tb3ZlID0gc2V0UmFuZ2VWYWx1ZShkYXRhLm1vdmUpO1xuICAgICAgICB9XG4gICAgfVxufVxuIiwiaW1wb3J0IHsgbWlsbGlzZWNvbmRzVG9TZWNvbmRzIH0gZnJvbSBcIkB0c3BhcnRpY2xlcy9lbmdpbmVcIjtcbmNvbnN0IGRlZmF1bHREaXN0YW5jZSA9IDAsIGRvdWJsZSA9IDIsIGRvdWJsZVBJID0gTWF0aC5QSSAqIGRvdWJsZSwgZGlzdGFuY2VGYWN0b3IgPSA2MDtcbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVXb2JibGUocGFydGljbGUsIGRlbHRhKSB7XG4gICAgY29uc3QgeyB3b2JibGU6IHdvYmJsZU9wdGlvbnMgfSA9IHBhcnRpY2xlLm9wdGlvbnMsIHsgd29iYmxlIH0gPSBwYXJ0aWNsZTtcbiAgICBpZiAoIXdvYmJsZU9wdGlvbnM/LmVuYWJsZSB8fCAhd29iYmxlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgYW5nbGVTcGVlZCA9IHdvYmJsZS5hbmdsZVNwZWVkICogZGVsdGEuZmFjdG9yLCBtb3ZlU3BlZWQgPSB3b2JibGUubW92ZVNwZWVkICogZGVsdGEuZmFjdG9yLCBkaXN0YW5jZSA9IChtb3ZlU3BlZWQgKiAoKHBhcnRpY2xlLnJldGluYS53b2JibGVEaXN0YW5jZSA/PyBkZWZhdWx0RGlzdGFuY2UpICogZGVsdGEuZmFjdG9yKSkgL1xuICAgICAgICAobWlsbGlzZWNvbmRzVG9TZWNvbmRzIC8gZGlzdGFuY2VGYWN0b3IpLCBtYXggPSBkb3VibGVQSSwgeyBwb3NpdGlvbiB9ID0gcGFydGljbGU7XG4gICAgd29iYmxlLmFuZ2xlICs9IGFuZ2xlU3BlZWQ7XG4gICAgaWYgKHdvYmJsZS5hbmdsZSA+IG1heCkge1xuICAgICAgICB3b2JibGUuYW5nbGUgLT0gbWF4O1xuICAgIH1cbiAgICBwb3NpdGlvbi54ICs9IGRpc3RhbmNlICogTWF0aC5jb3Mod29iYmxlLmFuZ2xlKTtcbiAgICBwb3NpdGlvbi55ICs9IGRpc3RhbmNlICogTWF0aC5hYnMoTWF0aC5zaW4od29iYmxlLmFuZ2xlKSk7XG59XG4iLCJpbXBvcnQgeyBnZXRSYW5kb20sIGdldFJhbmdlVmFsdWUsIH0gZnJvbSBcIkB0c3BhcnRpY2xlcy9lbmdpbmVcIjtcbmltcG9ydCB7IFdvYmJsZSB9IGZyb20gXCIuL09wdGlvbnMvQ2xhc3Nlcy9Xb2JibGUuanNcIjtcbmltcG9ydCB7IHVwZGF0ZVdvYmJsZSB9IGZyb20gXCIuL1V0aWxzLmpzXCI7XG5jb25zdCBkb3VibGUgPSAyLCBkb3VibGVQSSA9IE1hdGguUEkgKiBkb3VibGUsIG1heEFuZ2xlID0gMzYwLCBtb3ZlU3BlZWRGYWN0b3IgPSAxMCwgZGVmYXVsdERpc3RhbmNlID0gMDtcbmV4cG9ydCBjbGFzcyBXb2JibGVVcGRhdGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihjb250YWluZXIpIHtcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBjb250YWluZXI7XG4gICAgfVxuICAgIGluaXQocGFydGljbGUpIHtcbiAgICAgICAgY29uc3Qgd29iYmxlT3B0ID0gcGFydGljbGUub3B0aW9ucy53b2JibGU7XG4gICAgICAgIGlmICh3b2JibGVPcHQ/LmVuYWJsZSkge1xuICAgICAgICAgICAgcGFydGljbGUud29iYmxlID0ge1xuICAgICAgICAgICAgICAgIGFuZ2xlOiBnZXRSYW5kb20oKSAqIGRvdWJsZVBJLFxuICAgICAgICAgICAgICAgIGFuZ2xlU3BlZWQ6IGdldFJhbmdlVmFsdWUod29iYmxlT3B0LnNwZWVkLmFuZ2xlKSAvIG1heEFuZ2xlLFxuICAgICAgICAgICAgICAgIG1vdmVTcGVlZDogZ2V0UmFuZ2VWYWx1ZSh3b2JibGVPcHQuc3BlZWQubW92ZSkgLyBtb3ZlU3BlZWRGYWN0b3IsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcGFydGljbGUud29iYmxlID0ge1xuICAgICAgICAgICAgICAgIGFuZ2xlOiAwLFxuICAgICAgICAgICAgICAgIGFuZ2xlU3BlZWQ6IDAsXG4gICAgICAgICAgICAgICAgbW92ZVNwZWVkOiAwLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBwYXJ0aWNsZS5yZXRpbmEud29iYmxlRGlzdGFuY2UgPVxuICAgICAgICAgICAgZ2V0UmFuZ2VWYWx1ZSh3b2JibGVPcHQ/LmRpc3RhbmNlID8/IGRlZmF1bHREaXN0YW5jZSkgKiB0aGlzLmNvbnRhaW5lci5yZXRpbmEucGl4ZWxSYXRpbztcbiAgICB9XG4gICAgaXNFbmFibGVkKHBhcnRpY2xlKSB7XG4gICAgICAgIHJldHVybiAhcGFydGljbGUuZGVzdHJveWVkICYmICFwYXJ0aWNsZS5zcGF3bmluZyAmJiAhIXBhcnRpY2xlLm9wdGlvbnMud29iYmxlPy5lbmFibGU7XG4gICAgfVxuICAgIGxvYWRPcHRpb25zKG9wdGlvbnMsIC4uLnNvdXJjZXMpIHtcbiAgICAgICAgaWYgKCFvcHRpb25zLndvYmJsZSkge1xuICAgICAgICAgICAgb3B0aW9ucy53b2JibGUgPSBuZXcgV29iYmxlKCk7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChjb25zdCBzb3VyY2Ugb2Ygc291cmNlcykge1xuICAgICAgICAgICAgb3B0aW9ucy53b2JibGUubG9hZChzb3VyY2U/LndvYmJsZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdXBkYXRlKHBhcnRpY2xlLCBkZWx0YSkge1xuICAgICAgICBpZiAoIXRoaXMuaXNFbmFibGVkKHBhcnRpY2xlKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHVwZGF0ZVdvYmJsZShwYXJ0aWNsZSwgZGVsdGEpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==