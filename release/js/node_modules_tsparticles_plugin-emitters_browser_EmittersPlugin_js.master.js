"use strict";
(self["webpackChunkvshb_local"] = self["webpackChunkvshb_local"] || []).push([["node_modules_tsparticles_plugin-emitters_browser_EmittersPlugin_js"],{

/***/ "./node_modules/@tsparticles/plugin-emitters/browser/EmittersPlugin.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tsparticles/plugin-emitters/browser/EmittersPlugin.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EmittersPlugin: () => (/* binding */ EmittersPlugin)
/* harmony export */ });
/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ "./node_modules/@tsparticles/engine/browser/index.js");
/* harmony import */ var _Options_Classes_Emitter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Options/Classes/Emitter.js */ "./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/Emitter.js");


class EmittersPlugin {
    constructor(engine) {
        this._engine = engine;
        this.id = "emitters";
    }
    async getPlugin(container) {
        const { Emitters } = await __webpack_require__.e(/*! import() */ "node_modules_tsparticles_plugin-emitters_browser_Emitters_js").then(__webpack_require__.bind(__webpack_require__, /*! ./Emitters.js */ "./node_modules/@tsparticles/plugin-emitters/browser/Emitters.js"));
        return new Emitters(this._engine, container);
    }
    loadOptions(options, source) {
        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {
            return;
        }
        if (source?.emitters) {
            options.emitters = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.executeOnSingleOrMultiple)(source.emitters, (emitter) => {
                const tmp = new _Options_Classes_Emitter_js__WEBPACK_IMPORTED_MODULE_1__.Emitter();
                tmp.load(emitter);
                return tmp;
            });
        }
        const interactivityEmitters = source?.interactivity?.modes?.emitters;
        if (interactivityEmitters) {
            if ((0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.isArray)(interactivityEmitters)) {
                options.interactivity.modes.emitters = {
                    random: {
                        count: 1,
                        enable: true,
                    },
                    value: interactivityEmitters.map((s) => {
                        const tmp = new _Options_Classes_Emitter_js__WEBPACK_IMPORTED_MODULE_1__.Emitter();
                        tmp.load(s);
                        return tmp;
                    }),
                };
            }
            else {
                const emitterMode = interactivityEmitters;
                if (emitterMode.value !== undefined) {
                    const defaultCount = 1;
                    if ((0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.isArray)(emitterMode.value)) {
                        options.interactivity.modes.emitters = {
                            random: {
                                count: emitterMode.random.count ?? defaultCount,
                                enable: emitterMode.random.enable ?? false,
                            },
                            value: emitterMode.value.map((s) => {
                                const tmp = new _Options_Classes_Emitter_js__WEBPACK_IMPORTED_MODULE_1__.Emitter();
                                tmp.load(s);
                                return tmp;
                            }),
                        };
                    }
                    else {
                        const tmp = new _Options_Classes_Emitter_js__WEBPACK_IMPORTED_MODULE_1__.Emitter();
                        tmp.load(emitterMode.value);
                        options.interactivity.modes.emitters = {
                            random: {
                                count: emitterMode.random.count ?? defaultCount,
                                enable: emitterMode.random.enable ?? false,
                            },
                            value: tmp,
                        };
                    }
                }
                else {
                    const emitterOptions = (options.interactivity.modes.emitters = {
                        random: {
                            count: 1,
                            enable: false,
                        },
                        value: new _Options_Classes_Emitter_js__WEBPACK_IMPORTED_MODULE_1__.Emitter(),
                    });
                    emitterOptions.value.load(interactivityEmitters);
                }
            }
        }
    }
    needsPlugin(options) {
        if (!options) {
            return false;
        }
        const emitters = options.emitters;
        return (((0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.isArray)(emitters) && !!emitters.length) ||
            emitters !== undefined ||
            (!!options.interactivity?.events?.onClick?.mode &&
                (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.isInArray)("emitter", options.interactivity.events.onClick.mode)));
    }
}


/***/ }),

/***/ "./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/Emitter.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/Emitter.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Emitter: () => (/* binding */ Emitter)
/* harmony export */ });
/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ "./node_modules/@tsparticles/engine/browser/index.js");
/* harmony import */ var _EmitterLife_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EmitterLife.js */ "./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterLife.js");
/* harmony import */ var _EmitterRate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EmitterRate.js */ "./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterRate.js");
/* harmony import */ var _EmitterShape_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EmitterShape.js */ "./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterShape.js");
/* harmony import */ var _EmitterSize_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EmitterSize.js */ "./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterSize.js");





class Emitter {
    constructor() {
        this.autoPlay = true;
        this.fill = true;
        this.life = new _EmitterLife_js__WEBPACK_IMPORTED_MODULE_1__.EmitterLife();
        this.rate = new _EmitterRate_js__WEBPACK_IMPORTED_MODULE_2__.EmitterRate();
        this.shape = new _EmitterShape_js__WEBPACK_IMPORTED_MODULE_3__.EmitterShape();
        this.startCount = 0;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.autoPlay !== undefined) {
            this.autoPlay = data.autoPlay;
        }
        if (data.size !== undefined) {
            if (!this.size) {
                this.size = new _EmitterSize_js__WEBPACK_IMPORTED_MODULE_4__.EmitterSize();
            }
            this.size.load(data.size);
        }
        if (data.direction !== undefined) {
            this.direction = data.direction;
        }
        this.domId = data.domId;
        if (data.fill !== undefined) {
            this.fill = data.fill;
        }
        this.life.load(data.life);
        this.name = data.name;
        this.particles = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.executeOnSingleOrMultiple)(data.particles, (particles) => {
            return (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.deepExtend)({}, particles);
        });
        this.rate.load(data.rate);
        this.shape.load(data.shape);
        if (data.position !== undefined) {
            this.position = {};
            if (data.position.x !== undefined) {
                this.position.x = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.setRangeValue)(data.position.x);
            }
            if (data.position.y !== undefined) {
                this.position.y = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.setRangeValue)(data.position.y);
            }
        }
        if (data.spawnColor !== undefined) {
            if (this.spawnColor === undefined) {
                this.spawnColor = new _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.AnimatableColor();
            }
            this.spawnColor.load(data.spawnColor);
        }
        if (data.startCount !== undefined) {
            this.startCount = data.startCount;
        }
    }
}


/***/ }),

/***/ "./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterLife.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterLife.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EmitterLife: () => (/* binding */ EmitterLife)
/* harmony export */ });
/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ "./node_modules/@tsparticles/engine/browser/index.js");

class EmitterLife {
    constructor() {
        this.wait = false;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.count !== undefined) {
            this.count = data.count;
        }
        if (data.delay !== undefined) {
            this.delay = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.setRangeValue)(data.delay);
        }
        if (data.duration !== undefined) {
            this.duration = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.setRangeValue)(data.duration);
        }
        if (data.wait !== undefined) {
            this.wait = data.wait;
        }
    }
}


/***/ }),

/***/ "./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterRate.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterRate.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EmitterRate: () => (/* binding */ EmitterRate)
/* harmony export */ });
/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ "./node_modules/@tsparticles/engine/browser/index.js");

class EmitterRate {
    constructor() {
        this.quantity = 1;
        this.delay = 0.1;
    }
    load(data) {
        if (data === undefined) {
            return;
        }
        if (data.quantity !== undefined) {
            this.quantity = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.setRangeValue)(data.quantity);
        }
        if (data.delay !== undefined) {
            this.delay = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.setRangeValue)(data.delay);
        }
    }
}


/***/ }),

/***/ "./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterShape.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterShape.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EmitterShape: () => (/* binding */ EmitterShape)
/* harmony export */ });
/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ "./node_modules/@tsparticles/engine/browser/index.js");
/* harmony import */ var _EmitterShapeReplace_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EmitterShapeReplace.js */ "./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterShapeReplace.js");


class EmitterShape {
    constructor() {
        this.options = {};
        this.replace = new _EmitterShapeReplace_js__WEBPACK_IMPORTED_MODULE_1__.EmitterShapeReplace();
        this.type = "square";
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.options !== undefined) {
            this.options = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.deepExtend)({}, data.options ?? {});
        }
        this.replace.load(data.replace);
        if (data.type !== undefined) {
            this.type = data.type;
        }
    }
}


/***/ }),

/***/ "./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterShapeReplace.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterShapeReplace.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EmitterShapeReplace: () => (/* binding */ EmitterShapeReplace)
/* harmony export */ });
class EmitterShapeReplace {
    constructor() {
        this.color = false;
        this.opacity = false;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.color !== undefined) {
            this.color = data.color;
        }
        if (data.opacity !== undefined) {
            this.opacity = data.opacity;
        }
    }
}


/***/ }),

/***/ "./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterSize.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@tsparticles/plugin-emitters/browser/Options/Classes/EmitterSize.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EmitterSize: () => (/* binding */ EmitterSize)
/* harmony export */ });
class EmitterSize {
    constructor() {
        this.mode = "percent";
        this.height = 0;
        this.width = 0;
    }
    load(data) {
        if (data === undefined) {
            return;
        }
        if (data.mode !== undefined) {
            this.mode = data.mode;
        }
        if (data.height !== undefined) {
            this.height = data.height;
        }
        if (data.width !== undefined) {
            this.width = data.width;
        }
    }
}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,