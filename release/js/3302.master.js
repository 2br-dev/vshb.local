"use strict";(self.webpackChunkvshb_local=self.webpackChunkvshb_local||[]).push([[3302],{3302:(e,x,y)=>{y.d(x,{ClubDrawer:()=>l});var s=y(5402);class l{draw(e){(0,s.k)(e,s.f.club)}}},5402:(e,x,y)=>{function s(e,x){if(!x.segments.length||!x.segments[0].values.length)return;const{context:y,radius:s}=e;y.moveTo(x.segments[0].values[0].x*s,x.segments[0].values[0].y*s);for(const e of x.segments)y.bezierCurveTo(e.values[1].x*s,e.values[1].y*s,e.values[2].x*s,e.values[2].y*s,e.values[3].x*s,e.values[3].y*s);for(let e=x.segments.length-1;e>=0;e--){const l=x.segments[e];y.bezierCurveTo(-l.values[2].x*s,l.values[2].y*s,-l.values[1].x*s,l.values[1].y*s,-l.values[0].x*s,l.values[0].y*s)}}y.d(x,{f:()=>a,k:()=>s});const l=.5,a={heart:{segments:[{values:[{x:0,y:l},{x:0,y:l},{x:l,y:0},{x:l,y:-l/2}]},{values:[{x:l,y:-l/2},{x:l,y:-l/2},{x:l,y:-l},{x:l/2,y:-l}]},{values:[{x:l/2,y:-l},{x:l/2,y:-l},{x:0,y:-l},{x:0,y:-l/2}]}]},diamond:{segments:[{values:[{x:0,y:l},{x:0,y:l},{x:.375,y:0},{x:.375,y:0}]},{values:[{x:.375,y:0},{x:.375,y:0},{x:0,y:-l},{x:0,y:-l}]}]},club:{segments:[{values:[{x:0,y:-l},{x:0,y:-l},{x:l/2,y:-l},{x:l/2,y:-l/2}]},{values:[{x:l/2,y:-l/2},{x:l/2,y:-l/2},{x:l,y:-l/2},{x:l,y:0}]},{values:[{x:l,y:0},{x:l,y:0},{x:l,y:l/2},{x:l/2,y:l/2}]},{values:[{x:l/2,y:l/2},{x:l/2,y:l/2},{x:l/8,y:l/2},{x:l/8,y:l/8}]},{values:[{x:l/8,y:l/8},{x:l/8,y:l/2},{x:l/2,y:l},{x:l/2,y:l}]},{values:[{x:l/2,y:l},{x:l/2,y:l},{x:0,y:l},{x:0,y:l}]}]},spade:{segments:[{values:[{x:0,y:-l},{x:0,y:-l},{x:l,y:-l/2},{x:l,y:0}]},{values:[{x:l,y:0},{x:l,y:0},{x:l,y:l/2},{x:l/2,y:l/2}]},{values:[{x:l/2,y:l/2},{x:l/2,y:l/2},{x:l/8,y:l/2},{x:l/8,y:l/8}]},{values:[{x:l/8,y:l/8},{x:l/8,y:l/2},{x:l/2,y:l},{x:l/2,y:l}]},{values:[{x:l/2,y:l},{x:l/2,y:l},{x:0,y:l},{x:0,y:l}]}]}}}}]);